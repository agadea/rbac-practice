// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Action {
  CREATE
  READ
  UPDATE
  DELETE
}

model Module {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  status      Boolean

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime? @default(now())

  createdBy String
  updatedBy String?
  deletedBy String?

  submodules Submodule[]
}

model Submodule {
  id          String       @id @default(cuid())
  name        String
  slug        String
  module      Module       @relation(fields: [moduleId], references: [id])
  moduleId    String
  permissions Permission[]

  @@unique([moduleId, slug])
}

model User {
  id        String @id @default(cuid())
  firstName String
  lastName  String
  email     String @unique
  password  String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  createdBy String
  updatedBy String?
  deletedBy String?

  status Boolean @default(true)

  userRoles UserRole[]
}

model Role {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  status Boolean @default(true)

  createdBy String
  updatedBy String?
  deletedBy String?

  userRoles       UserRole[]
  rolePermissions RolePermission[]
}

model Permission {
  id          String    @id @default(cuid())
  name        String    @unique // optional, e.g. "capitalhumano.empleados.create"
  submodule   Submodule @relation(fields: [submoduleId], references: [id])
  submoduleId String
  action      Action

  rolePermissions RolePermission[]

  @@unique([submoduleId, action])
}

model UserRole {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String
  assignedAt DateTime @default(now())

  @@unique([userId, roleId])
}

model RolePermission {
  id           String     @id @default(cuid())
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String
  grantedAt    DateTime   @default(now())

  @@unique([roleId, permissionId])
}
